name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
    
    - name: Run ruff linting
      run: |
        ruff check . --output-format=github
    
    - name: Run ruff formatting check
      run: |
        ruff format --check .
    
    - name: Run mypy type checking
      run: |
        python -m mypy --package fantastic_palm_tree --show-error-codes --show-error-context
        python -m mypy backtesting/ --show-error-codes --show-error-context
    
    - name: Run tests with coverage
      run: |
        pytest tests/ --cov=fantastic_palm_tree --cov=backtesting --cov-report=xml --cov-report=term-missing
      continue-on-error: true  # Allow failure until coverage target is reached
    
    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.12'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true